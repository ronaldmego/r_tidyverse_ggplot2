diamonds %>%
count(cut,color)
diamonds %>%
count(color,cut) %>%
ggplot(mapping=aes(x=cut,y=color))+
geom_tile(mapping=aes(fill=n))
ggplot(data = diamonds)+
geom_point(mapping = aes(x=carat,y=price))
ggplot(data = diamonds)+
geom_point(mapping = aes(x=carat,y=price),alpha=0.2)
ggplot(data = diamonds)+
geom_point(mapping = aes(x=carat,y=price),alpha=0.01)
ggplot(data = diamonds)+
geom_hex(mapping=aes(x=carat,y=price))
ggplot(data = diamonds)+
geom_bin2d(mapping=aes(x=carat,y=price))
ggplot(data=diamonds,mapping=aes(x=carat,y=price))+
geom_boxplot(mapping=aes(group=cut_width(carat,0.1)))
diamonds %>%
filter(carat,3)
diamonds %>%
filter(carat,3) %>%
ggplot(,mapping=aes(x=carat,y=price))+
geom_boxplot(mapping=aes(group=cut_width(carat,0.1)))
diamonds %>%
filter(carat<3) %>%
ggplot(,mapping=aes(x=carat,y=price))+
geom_boxplot(mapping=aes(group=cut_width(carat,0.1)))
diamonds %>%
filter(carat<3) %>%
ggplot(mapping=aes(x=carat,y=price))+
geom_boxplot(mapping=aes(group=cut_width(carat,0.1)))
diamonds %>%
filter(carat<3) %>%
ggplot(mapping=aes(x=carat,y=price))+
geom_boxplot(mapping=aes(group=cut_width(carat,0.1)),varwidth = T)
diamonds %>%
filter(carat<3) %>%
ggplot(mapping=aes(x=carat,y=price))+
geom_boxplot(mapping = aes(group=cut_number(carat,20)))
diamonds %>%
filter(carat<3) %>%
ggplot(mapping=aes(x=carat,y=price))+
geom_boxplot(mapping=aes(group=cut_width(carat,0.1)))
,varwidth = T
diamonds %>%
filter(carat<3) %>%
ggplot(mapping=aes(x=carat,y=price))+
geom_boxplot(mapping=aes(group=cut_width(carat,0.1)),varwidth = T)
diamonds %>%
filter(carat<3) %>%
ggplot(mapping=aes(x=carat,y=price))+
geom_boxplot(mapping = aes(group=cut_number(carat,20)),varwidth = T)
diamonds %>%
filter(carat<3) %>%
ggplot(mapping=aes(x=carat,y=price))+
geom_boxplot(mapping = aes(group=cut_number(carat,20)))
diamonds %>%
count(cut,clarity) %>%
ggplot(aes(clarity,cut,fill=n))+
geom_tile()
ggplot(data=faithful)+
geom_point(mapping=aes(x=eruption,y=waiting))
knitr::opts_chunk$set(echo = TRUE)
#vignette("tibble")
library(tidyverse)
write.csv(mtcars,file="data/cars.csv")
write.csv(mtcars,file="data\cars.csv")
wd()
get_wd()
getwd()
write.csv(mtcars,file="..\data\cars.csv")
write.csv(mtcars,file="../data/cars.csv")
cars <- read_csv("data/cars.csv")
cars <- read_csv("../data/cars.csv")
View(cars)
View(cars)
read_csv("x,y,z
1,2,3.5
4,5,6
7,8,9")
read_csv("este fichero fue generado por Ronald Mego
el día 27 de noviembre del 2021 para
usarlo en el curso de tidyverse
x,y,z
1,2,3
4,5,6", skip=3)
read_csv("#esto es un comentario
x,y,z
1,2,3
4,5,6",comment="#")
read_csv("1,2,3\n4,5,6\n7,8,9",col_names=F)
read_csv("1,2,3\n4,5,6\n7,8,9"col_names=c("primera","segunda","tercera"))
read_csv("1,2,3\n4,5,6\n7,8,9",col_names=c("primera","segunda","tercera"))
read_csv("x,y,z\n1,2,.\n4,#,6")
read_csv("x,y,z\n1,2,.\n4,#,6",na=c(".","#"))
data <- "x,y\n1,'a,b'"
read_delim(data, ",", quote = "'")
parse_logical(c("TRUE","FALSE","FALSE","NA"))
str(parse_logical(c("TRUE","FALSE","FALSE","NA")))
parse_logical(c("1","2","3","4"))
parse_integer(c("1","2","3","4"))
parse_integer(c("1","2","3","4"))
str(parse_integer(c("1","2","3","4")))
str(parse_date("1988-05-19","2018-05-30"))
str(parse_date(c("1988-05-19","2018-05-30")))
parse_integer(c("1","2","3","#","5","729"),na="na")
parse_integer(c("1","2","3","#","5","729"),na="#")
parse_integer(c("1","2","hola","5","234","3.141592"))
parse_double(12.345)
parse_double(121345)
parse_double("12,1345")
parse_double("12,345",locale=locale(decimal_mark = ","))
parse_double("12.1345")
parse_double("12,345",locale=locale(decimal_mark = ","))
parse_double("12,1345",locale=locale(decimal_mark = ","))
parse_double("12.1345")
parse_double("12,1345",locale=locale(decimal_mark = ","))
parse_number("100€")
parse_number("$1000")
parse_number("100€")
parse_number("el vestido ha costado 12.45€")
parse_number("100€")
parse_number("$1000")
parse_number("12%")
parse_number("el vestido ha costado 12.45€")
parse_number("$1,000,000")
parse_number("1.000.000",locale=locale(grouping_mark = "."))
parse_number("123'456'789",locale=locale(grouping_mark = "'"))
parse_number("$1,000,000")
parse_number("1.000.000",locale=locale(grouping_mark = "."))
parse_number("123'456'789",locale=locale(grouping_mark = "'"))
parse_number("$1,233,478")
parse_number("1.546.254",locale=locale(grouping_mark = "."))
parse_number("123'456'789",locale=locale(grouping_mark = "'"))
charToRaw("Ronald Mego")
x1 <- "El Ni\xf1o ha estado enfermo"
x2 <- "\x82\xb1\x82\xf1\x82\xb2\x82\xcd"
parse_character(x1,locale = "Latin1")
parse_character(x1,locale (encoding = "Latin1"))
parse_character(x1,locale =(encoding = "Latin1"))
parse_character(x1,locale =locale(encoding = "Latin1"))
parse_character(x2,locale=locale(encoding = "Shift-JIS"))
guess_encoding(charToRaw(x1))
guess_encoding(charToRaw(x2))
parse_character(x1,locale =locale(encoding = "ISO-8859-1"))
parse_character(x2,locale =locale(encoding = "ISO-8859-5"))
months <- c("Jan","Feb","Mar","Abr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
parse_factor(c("May","Apr","Jul","Aug","Sec","Nob"),levels = months)
months <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
parse_factor(c("May","Apr","Jul","Aug","Sec","Nob"),levels = months)
#parse_factor
months <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","No","Dec")
parse_factor(c("May","Apr","Jul","Aug","Sec","Nob"),levels = months)
#parse_factor
months <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","De")
parse_factor(c("May","Apr","Jul","Aug","Sec","Nob"),levels = months)
#parse_factor
months <- c("Jan","Feb","Mar","Apr","Ma","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
parse_factor(c("May","Apr","Jul","Aug","Sec","Nob"),levels = months)
#parse_factor
months <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
parse_factor(c("May","Apr","Jul","Aug","Sec","Nob"),levels = months)
#parse_factor
parse_datetime("2021-11-27T1051")
parse_datetime("20180605")
parse_date("2015-12-07")
parse_date(2017/05/18)
parse_date("2017/05/18")
parse_time("03:00 pm")
parse_time("20:00:34")
parse_date("05/08/15",format="%d/%m/y")
parse_date("05/08/15",format="%d/%m/%y")
parse_date("08/05/15",format="%m/%d/%y")
parse_date("01-05-2018",format="%d-%m-%Y")
parse_date("03 March 17", format = "%d %B %y")
parse_date("5 janvier 2012", format="%d %N %Y",locale=locale("fr"))
parse_date("5 janvier 2012", format="%d %B %Y",locale=locale("fr"))
parse_date("2 septiembre 1985",format="%d %B %Y",locale=locale("esp"))
parse_date("2 septiembre 1985",format="%d %B %Y",locale=locale("es"))
?locale()
guess_parser("22018-05-03")
guess_parser("2018-05-03")
guess_parser(18:59)
guess_parser("18:59")
guess_parser(c("3,6,7,8,23"))
guess_parser(c("TRUE","TRUE","FALSE"))
guess_parser(c("3","6","8","25"))
challenge <- read_csv(readr_example("challenge.csv"))
View(challenge)
problems(challenge)
View(challenge)
challenge <- read_csv(readr_example("challenge.csv"),
col_types = cols(
x=col_double(),
y=col_date()
))
challenge2 <- read_csv(readr_example("challenge.csv"),
col_types = cols(.default = col_character()))
type_convert(challenge2)
read_lines(readr_example("challenge.csv"))
read_file(readr_example("challenge.csv"))
write_csv(challenge,path = "data/challenge.csv")
write_csv(challenge,path = "../data/challenge.csv")
read_csv("../data/challenge.csv")
write_rds(challenge2,path = "../data/challenge.rds")
write_rds(challenge2,file = "../data/challenge.rds")
write_rds(challenge,file = "../data/challenge.rds")
read_rds("data/challenge.rds")
read_rds("../data/challenge.rds")
installed.packages("feather")
install.packages("feather")
library(feather)
write_feather(challenge,path="../data/challenge.feather")
read_feather("../data/challenge.feather")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
table <- read_csv("../data/populaton.csv")
table <- read_csv("/data/populaton.csv")
table <- read_csv("data/populaton.csv")
table <- read_csv("../data/population_by_country_2020.csv")
View(table)
table
table1
write_rds("../data/population.rds")
write_rds(table1,"../data/population.rds")
read_rds("../data/population.rds")
table <- read_rds("../data/population.rds")
View(table)
table %>%
mutate(rate = cases/population*10000)
table %>%
count(year, wt = cases)
table %>%
ggplot(aes(year,cases)) +
geom_line(aes(group=country),color="grey")
table %>%
ggplot(aes(year,cases)) +
geom_line(aes(group=country),color="grey")+
geom_point(aes(color=country))
table4a %>%
gather(`1999`,`2000`,key="year",value="cases")
table4a
table4b
gather(`1999`,`2000`,key = "year",value = "population")
table4b %>%
gather(`1999`,`2000`,key = "year",value = "population")
left_join(tidy4a,tidy4b)
table4a %>%
gather(`1999`,`2000`,key="year",value="cases") -> tidy4a
(table4a %>%
gather(`1999`,`2000`,key="year",value="cases") -> tidy4a)
(table4b %>%
gather(`1999`,`2000`,key = "year",value = "population") -> tidy4b)
left_join(tidy4a,tidy4b)
table2
table2 %>%
spread(key=type,value = count)
table4a
table4a %>%
pivot_longer(c(`1999`,`2000`),names_to="year",values_to = "cases")
table4b %>%
pivot_longer(c(`1999`,`2000`),names_to="year",values_to = "population")
table2 %>%
pivot_wider(values_fill = cases,values_from = count)
table2 %>%
pivot_wider(names_from = type , values_from = count)
table3
table3 %>%
separate(rate,into=c("cases","population"),sep="/")
table3 %>%
separate(rate,into=c("cases","population"),sep="/",convert = TRUE)
knitr::opts_chunk$set(echo = TRUE)
planes
library(tidyverse)
planes
nycflights13::planes
nycflights13::planes %>%
count(tailnum)
nycflights13::planes %>%
count(tailnum) %>%
arrange(desc(n))
nycflights13::planes %>%
count(tailnum) %>%
filter(n>0)
nycflights13::planes %>%
count(tailnum) %>%
filter(n>1)
```{r}
nycflights13::planes %>%
count(tailnum) %>%
arrange(desc(n))
x <- tribble(
~key, ~value
1   , "x1" ,
x <- tribble(
~key, ~value ,
1   , "x1" ,
2   , "x2" ,
3   , "x3"
)
y <- tribble(
~key, ~value ,
1   , "y1" ,
2   , "y2" ,
4   , "y4"
)
x %>%
left_join(y)
x %>%
left_join(y, by="key")
x %>%
left_join(y)
x %>%
right_join(y,by="key")
x %>%
full_join(y, by="key")
nycflights13::planes %>%
count(tailnum, sort = TRUE) %>%
head(10)
nycflights13::flights >%>%
nycflights13::flights %>%
count(dest)
nycflights13::flights %>%
count(dest, sort = TRUE)
nycflights13::flights %>%
count(dest, sort = TRUE) %>%
head(10)
(
nycflights13::flights %>%
count(dest, sort = TRUE) %>%
head(10) -> top_dest
)
nycflights13::flights %>%
filter( %in% top_dest)
nycflights13::flights %>%
filter(dest %in% top_dest)
nycflights13::flights %>%
filter(dest %in% top_dest$dest)
nycflights13::flights %>%
semi_join(top_dest)
nycflights13::flights %>%
anti_join(top_dest)
nycflights13::flights %>%
anti_join(top_dest) %>%
count(dest)
nycflights13::flights %>%
anti_join(top_dest) %>%
count(dest, sort = TRUE)
x %>%
inner_join(y, by = "key")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("stringr")
library(stringr)
library(tidyverse)
double_quote <- "\""
(
double_quote <- "\""
)
(
double_quote <- "\"" # '"'
)
(
double_quote <- "\"" # '"'
single_quote <- '\'' # "'"
backslash <- "\\"
x <- c(single_quote,double_quote,backslash)
backslash <- "\\"
x <- c(single_quote,double_quote,backslash)
#backslash <- "\\"
#double_quote <- "\"" # '"'
single_quote <- '\'' # "'"
double_quote <- "\"" # '"'
single_quote <- '\'' # "'"
backslash <- "\\"
x <- c(single_quote,double_quote,backslash)
x
writelines(x)
#install.packages("stringr")
library(stringr)
library(tidyverse)
writelines(x)
writeLines(x)
mu <- "\u00b5"
?'"'
str_length(c("x","Ronald Mego mola como prof",NA))
str_c("a","b","c",sep=", ")
str_c("hola",str_replace_na(x),"adios", sep=" ")
x <- c("abc",NA)
str_c("hola",str_replace_na(x),"adios", sep=" ")
str_c("prefix-",c("a","b","c"),"-sufix")
birthday <- F
str_c(
"Buena ", momento_del_dia, " ", name,
if(birthday) " y FELIZ CUMPLEAñOS!! =D",
"."
)
```{r}
name <- "Ronald"
momento_del_dia <- "mañana"
birthday <- F
str_c(
"Buena ", momento_del_dia, " ", name,
if(birthday) " y FELIZ CUMPLEAñOS!! =D",
"."
)
name <- "Ronald"
momento_del_dia <- "mañana"
birthday <- T
str_c(
"Buena ", momento_del_dia, " ", name,
if(birthday) " y FELIZ CUMPLEAñOS!! =D",
"."
)
str_c(c("a","b","c"), collapse = ",")
str_c(c("a","b","c"), sep = ",")
x <- c("Manzanas", "Peras","Limones","Platanos")
str_sub(x,1,3)
str_sub(x,-3-1)
str_to_lower(x,1,1)
str_to_lower(x,1,1)
str_to_lower(x,1,1)
str_to_lower(x)
str_to_upper(x)
str_to_lower(x)
str_to_upper(x)
str_sub(x,3,1) <- str_to_upper(str_sub(x,3,1))
(
str_sub(x,3,1) <- str_to_upper(str_sub(x,3,1))
)
(
str_sub(x,1,1) <- str_to_upper(str_sub(x,1,1))
)
(
str_sub(x,1,1) <- str_to_lower(str_sub(x,1,1))
)
str_to_lower(str_sub(x,1,1))
str_sub(x,1,1)
str_sub(x,3,1)
str_sub(x,1,3)
str_sub(x,3,4)
str_sub(x,3,3)
(
str_sub(x,3,3) <- str_to_upper(str_sub(x,3,3))
)
str_sub(x,3,3)
(
str_sub(x,3,3) <- str_to_upper(str_sub(x,3,3))
x
(
str_sub(x,3,3) <- str_to_upper(str_sub(x,3,3))
)
x
str_to_upper(x)
(
str_sub(x,3,3) <- str_to_upper(str_sub(x,3,3))
)
x
str_to_title(x)
str_sort(x)
str_sort(x,locale = "es")
str_view(x,"an")
#str_view()
#str_view_all()
x <- c("manzana","banana","pera","pomelo")
str_view(x,"an")
library(htmlwidgets)
str_view(x,"an")
str_view(x,".a.")
writeLines(dot)
dot<-"\\."
writeLines(dot)
str_view(c("abc","a.c","bc."),"a\\.c")
str_view(c("abc","a.c","bc."),"a.c")
str_view(c("abc","a.c","bc."),"a\.c")
str_view(c("abc","a.c","bc."),"a\\.c")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("stringr")
library(stringr)
library(tidyverse)
sum(!str_detect(words,"[aeiou]"))
words
words[!str_detect(words,"[aeiou]")]
fruits <- c("banana","coco","papaya","manzana","pera","pepino")
fruits <- c("banana","coco","papaya","manzana","pera","pepino")
str_view(fruits,"[ao]")
str_view(fruits,"a|o")
str_view(fruits,"[ao]")
str_view(fruits,"[aoe]")
str_view(fruits,"a|o|e")
str_view(fruits,"[ao]")
str_view(fruits,"a|o")
words[!str_detect(words,"[aeiou]")]
str_subset(words,"[aeiou]")
str_subset(words,!"[aeiou]")
str_subset(words,"^[^aeiou]+$")
words[!str_detect(words,"[aeiou]")]
str_subset(words,"[aeiou]$")
#creamos un tibble de dos columnas: word e i
df <- tibble (
word = words, #crea la columna "word" con cada elemento de words
i = seq_along(word) #asigna un numero correlativo a cada elemmento de words
)
View(df)
df %>% filter(str_detect(df$word,"x$"))
fruits
str_count(fruits,"a")
str_count(words,"[aeiou]")
str_count(words,"[aeiou]") %>% mean()
df %>% mutate(q_vocal=str_count(word,"[aeiou]"))
df %>% mutate(q_vocal=str_count(word,"[aeiou]"),
q_consonant=str_count(word,"[^aeiou]"))
